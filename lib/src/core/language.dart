// Copyright 2022 Kato Shinya. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided the conditions.

// üì¶ Package imports:
import 'package:freezed_annotation/freezed_annotation.dart';

// üåé Project imports:
import 'serializable.dart';

/// Represents ISO 639 Part 1 two-letter language code.
enum Language implements Serializable {
  /// `aa`
  @JsonValue('aa')
  afar('aa', 'Afaraf'),

  /// `ab`
  @JsonValue('ab')
  abkhaz('ab', '–∞“ß—Å—É–∞ –±—ã–∑—à”ô–∞'),

  /// `ae`
  @JsonValue('ae')
  avestan('ae', 'avesta'),

  /// `af`
  @JsonValue('af')
  afrikaans('af', 'Afrikaans'),

  /// `ak`
  @JsonValue('ak')
  akan('ak', 'Akan'),

  /// `am`
  @JsonValue('am')
  amharic('am', '·ä†·àõ·à≠·äõ'),

  /// `an`
  @JsonValue('an')
  aragonese('an', 'aragon√©s'),

  /// `ar`
  @JsonValue('ar')
  arabic('ar', 'ÿßŸÑŸÑÿ∫ÿ© ÿßŸÑÿπÿ±ÿ®Ÿäÿ©'),

  /// `as`
  @JsonValue('as')
  assamese('as', '‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ'),

  /// `av`
  @JsonValue('av')
  avaric('av', '–∞–≤–∞—Ä –º–∞—Ü”Ä'),

  /// `ay`
  @JsonValue('ay')
  aymara('ay', 'aymar aru'),

  /// `az`
  @JsonValue('az')
  azerbaijani('az', 'az…ôrbaycan dili'),

  /// `ba`
  @JsonValue('ba')
  bashkir('ba', '–±–∞—à“°–æ—Ä—Ç —Ç–µ–ª–µ'),

  /// `be`
  @JsonValue('be')
  belarusian('be', '–±–µ–ª–∞—Ä—É—Å–∫–∞—è –º–æ–≤–∞'),

  /// `bg`
  @JsonValue('bg')
  bulgarian('bg', '–±—ä–ª–≥–∞—Ä—Å–∫–∏ –µ–∑–∏–∫'),

  /// `bh`
  @JsonValue('bh')
  bihari('bh', '‡§≠‡•ã‡§ú‡§™‡•Å‡§∞‡•Ä'),

  /// `bi`
  @JsonValue('bi')
  bislama('bi', 'Bislama'),

  /// `bm`
  @JsonValue('bm')
  bambara('bm', 'bamanankan'),

  /// `bn`
  @JsonValue('bn')
  bengali('bn', '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ'),

  /// `bo`
  @JsonValue('bo')
  tibetan('bo', '‡Ωñ‡Ωº‡Ωë‡ºã‡Ω°‡Ω≤‡ΩÇ'),

  /// `br`
  @JsonValue('br')
  breton('br', 'brezhoneg'),

  /// `bs`
  @JsonValue('bs')
  bosnian('bs', 'bosanski jezik'),

  /// `ca`
  @JsonValue('ca')
  catalan('ca', 'Catal√†'),

  /// `ce`
  @JsonValue('ce')
  chechen('ce', '–Ω–æ—Ö—á–∏–π–Ω –º–æ—Ç—Ç'),

  /// `ch`
  @JsonValue('ch')
  chamorro('ch', 'Chamoru'),

  /// `co`
  @JsonValue('co')
  corsican('co', 'corsu'),

  /// `cr`
  @JsonValue('cr')
  cree('cr', '·ìÄ·ê¶·êÉ·î≠·êç·êè·ê£'),

  /// `cs`
  @JsonValue('cs')
  czech('cs', 'ƒçe≈°tina'),

  /// `cu`
  @JsonValue('cu')
  oldChurchSlavonic('cu', '—©–∑—ã–∫—ä —Å–ª–æ–≤—£–Ω—å—Å–∫—ä'),

  /// `cv`
  @JsonValue('cv')
  chuvash('cv', '—á”ë–≤–∞—à —á”ó–ª—Ö–∏'),

  /// `cy`
  @JsonValue('cy')
  welsh('cy', 'Cymraeg'),

  /// `da`
  @JsonValue('da')
  danish('da', 'dansk'),

  /// `de`
  @JsonValue('de')
  german('de', 'Deutsch'),

  /// `dv`
  @JsonValue('dv')
  divehi('dv', 'Dhivehi'),

  /// `dz`
  @JsonValue('dz')
  dzongkha('dz', '‡Ω¢‡æ´‡Ωº‡ΩÑ‡ºã‡ΩÅ'),

  /// `ee`
  @JsonValue('ee')
  ewe('ee', 'E ãegbe'),

  /// `el`
  @JsonValue('el')
  greek('el', 'ŒïŒªŒªŒ∑ŒΩŒπŒ∫Œ¨'),

  /// `en`
  @JsonValue('en')
  english('en', 'English'),

  /// `en-us`
  @JsonValue('en-us')
  americanEnglish('en-us', 'English'),

  /// `eo`
  @JsonValue('eo')
  esperanto('eo', 'Esperanto'),

  /// `es`
  @JsonValue('es')
  spanish('es', 'Espa√±ol'),

  /// `et`
  @JsonValue('et')
  estonian('et', 'eesti'),

  /// `eu`
  @JsonValue('eu')
  basque('eu', 'euskara'),

  /// `fa`
  @JsonValue('fa')
  persian('fa', 'ŸÅÿßÿ±ÿ≥€å'),

  /// `ff`
  @JsonValue('ff')
  fula('ff', 'Fulfulde'),

  /// `fi`
  @JsonValue('fi')
  finnish('fi', 'suomi'),

  /// `fj`
  @JsonValue('fj')
  fijian('fj', 'Vakaviti'),

  /// `fo`
  @JsonValue('fo')
  faroese('fo', 'f√∏royskt'),

  /// `fr`
  @JsonValue('fr')
  french('fr', 'Fran√ßais'),

  /// `fy`
  @JsonValue('fy')
  westernFrisian('fy', 'Frysk'),

  /// `ga`
  @JsonValue('ga')
  irish('ga', 'Gaeilge'),

  /// `gd`
  @JsonValue('gd')
  scottishGaelic('gd', 'G√†idhlig'),

  /// `gl`
  @JsonValue('gl')
  galician('gl', 'galego'),

  /// `gu`
  @JsonValue('gu')
  gujarati('gu', '‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä'),

  /// `gv`
  @JsonValue('gv')
  manx('gv', 'Gaelg'),

  /// `ha`
  @JsonValue('ha')
  hausa('ha', 'ŸáŸéŸàŸèÿ≥Ÿé'),

  /// `he`
  @JsonValue('he')
  hebrew('he', '◊¢◊ë◊®◊ô◊™'),

  /// `hi`
  @JsonValue('hi')
  hindi('hi', '‡§π‡§ø‡§®‡•ç‡§¶‡•Ä'),

  /// `ho`
  @JsonValue('ho')
  hiriMotu('ho', 'Hiri Motu'),

  /// `hr`
  @JsonValue('hr')
  croatian('hr', 'Hrvatski'),

  /// `ht`
  @JsonValue('ht')
  haitian('ht', 'Krey√≤l ayisyen'),

  /// `hu`
  @JsonValue('hu')
  hungarian('hu', 'magyar'),

  /// `hy`
  @JsonValue('hy')
  armenian('hy', '’Ä’°’µ’•÷Ä’•’∂'),

  /// `hz`
  @JsonValue('hz')
  herero('hz', 'Otjiherero'),

  /// `ia`
  @JsonValue('ia')
  interlingua('ia', 'Interlingua'),

  /// `id`
  @JsonValue('id')
  indonesian('id', 'Bahasa Indonesia'),

  /// `ie`
  @JsonValue('ie')
  interlingue('ie', 'Interlingue'),

  /// `ig`
  @JsonValue('ig')
  igbo('ig', 'As·ª•s·ª• Igbo'),

  /// `ii`
  @JsonValue('ii')
  nuosu('ii', 'ÍÜàÍå†Ííø Nuosuhxop'),

  /// `ik`
  @JsonValue('ik')
  inupiaq('ik', 'I√±upiaq'),

  /// `io`
  @JsonValue('io')
  ido('io', 'Ido'),

  /// `is_`
  @JsonValue('is_')
  icelandic('is_', '√çslenska'),

  /// `it`
  @JsonValue('it')
  italian('it', 'Italiano'),

  /// `iu`
  @JsonValue('iu')
  inuktitut('iu', '·êÉ·ìÑ·íÉ·ëé·ëê·ë¶'),

  /// `ja`
  @JsonValue('ja')
  japanese('ja', 'Êó•Êú¨Ë™û'),

  /// `jv`
  @JsonValue('jv')
  javanese('jv', 'basa Jawa'),

  /// `ka`
  @JsonValue('ka')
  georgian('ka', '·É•·Éê·É†·Éó·É£·Éö·Éò'),

  /// `kg`
  @JsonValue('kg')
  kongo('kg', 'Kikongo'),

  /// `ki`
  @JsonValue('ki')
  kikuyu('ki', 'Gƒ©k≈©y≈©'),

  /// `kj`
  @JsonValue('kj')
  kwanyama('kj', 'Kuanyama'),

  /// `kk`
  @JsonValue('kk')
  kazakh('kk', '“õ–∞–∑–∞“õ —Ç—ñ–ª—ñ'),

  /// `kl`
  @JsonValue('kl')
  kalaallisut('kl', 'kalaallisut'),

  /// `km`
  @JsonValue('km')
  khmer('km', '·ûÅ·üÅ·ûò·ûö·ûó·û∂·ûü·û∂'),

  /// `kn`
  @JsonValue('kn')
  kannada('kn', '‡≤ï‡≤®‡≥ç‡≤®‡≤°'),

  /// `ko`
  @JsonValue('ko')
  korean('ko', 'ÌïúÍµ≠Ïñ¥'),

  /// `kr`
  @JsonValue('kr')
  kanuri('kr', 'Kanuri'),

  /// `ks`
  @JsonValue('ks')
  kashmiri('ks', '‡§ï‡§∂‡•ç‡§Æ‡•Ä‡§∞‡•Ä'),

  /// `ku`
  @JsonValue('ku')
  kurmanji('ku', 'Kurmanc√Æ'),

  /// `kv`
  @JsonValue('kv')
  komi('kv', '–∫–æ–º–∏ –∫—ã–≤'),

  /// `kw`
  @JsonValue('kw')
  cornish('kw', 'Kernewek'),

  /// `ky`
  @JsonValue('ky')
  kyrgyz('ky', '–ö—ã—Ä–≥—ã–∑—á–∞'),

  /// `la`
  @JsonValue('la')
  latin('la', 'latine'),

  /// `lb`
  @JsonValue('lb')
  luxembourgish('lb', 'L√´tzebuergesch'),

  /// `lg`
  @JsonValue('lg')
  ganda('lg', 'Luganda'),

  /// `li`
  @JsonValue('li')
  limburgish('li', 'Limburgs'),

  /// `ln`
  @JsonValue('ln')
  lingala('ln', 'Ling√°la'),

  /// `lo`
  @JsonValue('lo')
  lao('lo', '‡∫•‡∫≤‡∫ß'),

  /// `lt`
  @JsonValue('lt')
  lithuanian('lt', 'lietuvi≈≥ kalba'),

  /// `lu`
  @JsonValue('lu')
  lubaKatanga('lu', 'Tshiluba'),

  /// `lv`
  @JsonValue('lv')
  latvian('lv', 'latvie≈°u valoda'),

  /// `mg`
  @JsonValue('mg')
  malagasy('mg', 'fiteny malagasy'),

  /// `mh`
  @JsonValue('mh')
  marshallese('mh', 'Kajin MÃßajeƒº'),

  /// `mi`
  @JsonValue('mi')
  maori('mi', 'te reo MƒÅori'),

  /// `mk`
  @JsonValue('mk')
  macedonian('mk', '–º–∞–∫–µ–¥–æ–Ω—Å–∫–∏ —ò–∞–∑–∏–∫'),

  /// `ml`
  @JsonValue('ml')
  malayalam('ml', '‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç'),

  /// `mn`
  @JsonValue('mn')
  mongolian('mn', '–ú–æ–Ω–≥–æ–ª —Ö—ç–ª'),

  /// `mr`
  @JsonValue('mr')
  marathi('mr', '‡§Æ‡§∞‡§æ‡§†‡•Ä'),

  /// `ms`
  @JsonValue('ms')
  malay('ms', 'Bahasa Melayu'),

  /// `mt`
  @JsonValue('mt')
  maltese('mt', 'Malti'),

  /// `my`
  @JsonValue('my')
  burmese('my', '·Äó·Äô·Ä¨·ÄÖ·Ä¨'),

  /// `na`
  @JsonValue('na')
  nauru('na', 'Ekakair≈© Naoero'),

  /// `nb`
  @JsonValue('nb')
  norwegianBokmal('nb', 'Norsk bokm√•l'),

  /// `nd`
  @JsonValue('nd')
  northernNdebele('nd', 'isiNdebele'),

  /// `ne`
  @JsonValue('ne')
  nepali('ne', '‡§®‡•á‡§™‡§æ‡§≤‡•Ä'),

  /// `ng`
  @JsonValue('ng')
  ndonga('ng', 'Owambo'),

  /// `nl`
  @JsonValue('nl')
  dutch('nl', 'Nederlands'),

  /// `nn`
  @JsonValue('nn')
  norwegianNynorsk('nn', 'Norsk Nynorsk'),

  /// `no`
  @JsonValue('no')
  norwegian('no', 'Norsk'),

  /// `nr`
  @JsonValue('nr')
  southernNdebele('nr', 'isiNdebele'),

  /// `nv`
  @JsonValue('nv')
  navajo('nv', 'Din√© bizaad'),

  /// `ny`
  @JsonValue('ny')
  chichewa('ny', 'chiChe≈µa'),

  /// `oc`
  @JsonValue('oc')
  occitan('oc', 'occitan'),

  /// `oj`
  @JsonValue('oj')
  ojibwe('oj', '·êä·ìÇ·îë·ìà·êØ·íß·êé·ìê'),

  /// `om`
  @JsonValue('om')
  oromo('om', 'Afaan Oromoo'),

  /// `or`
  @JsonValue('or')
  oriya('or', '‡¨ì‡¨°‡¨º‡¨ø‡¨Ü'),

  /// `os`
  @JsonValue('os')
  ossetian('os', '–∏—Ä–æ–Ω √¶–≤–∑–∞–≥'),

  /// `pa`
  @JsonValue('pa')
  panjabi('pa', '‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä'),

  /// `pi`
  @JsonValue('pi')
  pali('pi', '‡§™‡§æ‡§¥‡§ø'),

  /// `pl`
  @JsonValue('pl')
  polish('pl', 'Polski'),

  /// `ps`
  @JsonValue('ps')
  pashto('ps', 'Ÿæ⁄öÿ™Ÿà'),

  /// `pt`
  @JsonValue('pt')
  portuguese('pt', 'Portugu√™s'),

  /// `qu`
  @JsonValue('qu')
  quechua('qu', 'Runa Simi'),

  /// `rm`
  @JsonValue('rm')
  romansh('rm', 'rumantsch grischun'),

  /// `rn`
  @JsonValue('rn')
  kirundi('rn', 'Ikirundi'),

  /// `ro`
  @JsonValue('ro')
  romanian('ro', 'Rom√¢nƒÉ'),

  /// `ru`
  @JsonValue('ru')
  russian('ru', '–†—É—Å—Å–∫–∏–π'),

  /// `rw`
  @JsonValue('rw')
  kinyarwanda('rw', 'Ikinyarwanda'),

  /// `sa`
  @JsonValue('sa')
  sanskrit('sa', '‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§Æ‡•ç'),

  /// `sc`
  @JsonValue('sc')
  sardinian('sc', 'sardu'),

  /// `sd`
  @JsonValue('sd')
  sindhi('sd', '‡§∏‡§ø‡§®‡•ç‡§ß‡•Ä'),

  /// `se`
  @JsonValue('se')
  northernSami('se', 'Davvis√°megiella'),

  /// `sg`
  @JsonValue('sg')
  sango('sg', 'y√¢ng√¢ t√Æ s√§ng√∂'),

  /// `si`
  @JsonValue('si')
  sinhala('si', '‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω'),

  /// `sk`
  @JsonValue('sk')
  slovak('sk', 'slovenƒçina'),

  /// `sl`
  @JsonValue('sl')
  slovenian('sl', 'sloven≈°ƒçina'),

  /// `sn`
  @JsonValue('sn')
  shona('sn', 'chiShona'),

  /// `so`
  @JsonValue('so')
  somali('so', 'Soomaaliga'),

  /// `sq`
  @JsonValue('sq')
  albanian('sq', 'Shqip'),

  /// `sr`
  @JsonValue('sr')
  serbian('sr', '—Å—Ä–ø—Å–∫–∏ —ò–µ–∑–∏–∫'),

  /// `ss`
  @JsonValue('ss')
  swati('ss', 'SiSwati'),

  /// `st`
  @JsonValue('st')
  southernSotho('st', 'Sesotho'),

  /// `su`
  @JsonValue('su')
  sundanese('su', 'Basa Sunda'),

  /// `sv`
  @JsonValue('sv')
  swedish('sv', 'Svenska'),

  /// `sw`
  @JsonValue('sw')
  swahili('sw', 'Kiswahili'),

  /// `ta`
  @JsonValue('ta')
  tamil('ta', '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç'),

  /// `te`
  @JsonValue('te')
  telugu('te', '‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å'),

  /// `tg`
  @JsonValue('tg')
  tajik('tg', '—Ç–æ“∑–∏–∫”£'),

  /// `th`
  @JsonValue('th')
  thai('th', '‡πÑ‡∏ó‡∏¢'),

  /// `ti`
  @JsonValue('ti')
  tigrinya('ti', '·âµ·åç·à≠·äõ'),

  /// `tk`
  @JsonValue('tk')
  turkmen('tk', 'T√ºrkmen'),

  /// `tl`
  @JsonValue('tl')
  tagalog('tl', 'Wikang Tagalog'),

  /// `tn`
  @JsonValue('tn')
  tswana('tn', 'Setswana'),

  /// `to`
  @JsonValue('to')
  tonga('to', 'faka Tonga'),

  /// `tr`
  @JsonValue('tr')
  turkish('tr', 'T√ºrk√ße'),

  /// `ts`
  @JsonValue('ts')
  tsonga('ts', 'Xitsonga'),

  /// `tt`
  @JsonValue('tt')
  tatar('tt', '—Ç–∞—Ç–∞—Ä —Ç–µ–ª–µ'),

  /// `tw`
  @JsonValue('tw')
  twi('tw', 'Twi'),

  /// `ty`
  @JsonValue('ty')
  tahitian('ty', 'Reo Tahiti'),

  /// `ug`
  @JsonValue('ug')
  uyghur('ug', 'ÿ¶€áŸäÿ∫€áÿ±⁄Ü€ï‚Äé'),

  /// `uk`
  @JsonValue('uk')
  ukrainian('uk', '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞'),

  /// `ur`
  @JsonValue('ur')
  urdu('ur', 'ÿßÿ±ÿØŸà'),

  /// `uz`
  @JsonValue('uz')
  uzbek('uz', '–é–∑–±–µ–∫'),

  /// `ve`
  @JsonValue('ve')
  venda('ve', 'Tshiven·∏ìa'),

  /// `vi`
  @JsonValue('vi')
  vietnamese('vi', 'Ti·∫øng Vi·ªát'),

  /// `vo`
  @JsonValue('vo')
  volapuk('vo', 'Volap√ºk'),

  /// `wa`
  @JsonValue('wa')
  walloon('wa', 'walon'),

  /// `wo`
  @JsonValue('wo')
  wolof('wo', 'Wollof'),

  /// `xh`
  @JsonValue('xh')
  xhosa('xh', 'isiXhosa'),

  /// `yi`
  @JsonValue('yi')
  yiddish('yi', '◊ô◊ô÷¥◊ì◊ô◊©'),

  /// `yo`
  @JsonValue('yo')
  yoruba('yo', 'Yor√πb√°'),

  /// `za`
  @JsonValue('za')
  zhuang('za', 'Sa…Ø cue≈ã∆Ö'),

  /// `zh`
  @JsonValue('zh')
  chinese('zh', '‰∏≠Êñá'),

  /// `zh-cn
  @JsonValue('zh-cn')
  chineseChina('zh-cn', '‰∏≠Êñá'),

  /// `zu`
  @JsonValue('zu')
  zulu('zu', 'isiZulu');

  /// The language code
  final String code;

  /// The localized name of this language code.
  final String localizedName;

  const Language(this.code, this.localizedName);

  @override
  String get value => code;

  /// Returns the [Language] associated with [code].
  static Language valueOf(final String code) {
    final $code = code.toLowerCase();

    for (final language in values) {
      if (language.code == $code) {
        return language;
      }
    }

    throw UnsupportedError(
      'The code [$code] is not supported.',
    );
  }
}
